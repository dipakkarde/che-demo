schemaVersion: 2.1.0
metadata:
  name: golang2
  namespace: rludva-devspaces
projects:
  - name: golang-health-check
    zip:
      location: 'http://devfile-registry.openshift-operators.svc:8080/resources/v2/golang-health-check.zip'
components:
  - type: chePlugin
    id: ms-vscode.powershell
  - attributes:
      app.kubernetes.io/name: tools
      che-theia.eclipse.org/vscode-extensions:
        - 'relative:extension/resources/github_com/golang/vscode-go/releases/download/v0_23_0/go-0.23.0.vsix'
        - 'relative:extension/resources/github_com/PowerShell/vscode-powershell/releases/download/v2022.8.5/powershell-2022.8.5.vsix'
      che-theia.eclipse.org/vscode-preferences:
        go.lintFlags: '--fast'
        go.lintTool: golangci-lint
    container:
      args:
        - sh
        - '-c'
        - '${PLUGIN_REMOTE_ENDPOINT_EXECUTABLE}'
      endpoints:
        - exposure: public
          name: health-check-endpoint
          protocol: http
          targetPort: 8080
      env:
        - name: GOPATH
          value: '/projects/.che/gopath:/projects'
        - name: GOCACHE
          value: /tmp/.cache
        - name: PLUGIN_REMOTE_ENDPOINT_EXECUTABLE
          value: /remote-endpoint/plugin-remote-endpoint
        - name: THEIA_PLUGINS
          value: 'local-dir:///plugins/sidecars/tools'
        - name: CHE_DASHBOARD_URL
          value: 'https://devspaces.apps.atemi.nutius.com'
        - name: CHE_PLUGIN_REGISTRY_URL
          value: 'https://devspaces.apps.atemi.nutius.com/plugin-registry/v3'
        - name: CHE_PLUGIN_REGISTRY_INTERNAL_URL
          value: 'http://plugin-registry.openshift-operators.svc:8080/v3'
      image: 'registry.redhat.io/devspaces/udi-rhel8@sha256:d55549aad15742f6f7310da0c7abc1e65dd5d3ad2e3efb8fbf414cf91b9efac7'
      memoryLimit: 2Gi
      mountSources: true
      sourceMapping: /projects
      volumeMounts:
        - name: remote-endpoint
          path: /remote-endpoint
        - name: plugins
          path: /plugins
    name: tools
commands:
  - exec:
      commandLine: go build
      component: tools
      group:
        kind: build
      workingDir: '${PROJECTS_ROOT}/golang-health-check'
    id: build
  - exec:
      commandLine: ./golang-health-check
      component: tools
      group:
        kind: run
      workingDir: '${PROJECTS_ROOT}/golang-health-check'
    id: run
